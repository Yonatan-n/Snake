{"version":3,"sources":["gameSnake.js"],"names":["canvas","document","getElementById","ctx","getContext","snake","body","food","x","y","width","dir","speed","incSpeedX","incSpeedY","moveX","map","window","onload","initCanvas","initArrowControls","isPhone","flag","querySelector","computedStyle","getComputedStyle","color","getPropertyValue","Number","toString","slice","myEvent","ctrl","arrows","children","i","length","addEventListener","console","log","target","id","clearRect","clientWidth","clientHeight","fillStyle","fillRect","stroke","setInterval","draw","leftest","forEach","xy"],"mappings":"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","file":"gameSnake.map","sourceRoot":"..","sourcesContent":["var canvas = document.getElementById('snakeCanvas')\nvar ctx = canvas.getContext('2d')\nvar snake = {\n  body: [[0, 0], [20, 0], [40, 0], [60, 0]],\n  food: [[100, 100], [120, 120]],\n  x: 0,\n  y: 0,\n  width: 20,\n  dir: 'right',\n  speed: 20,\n  incSpeedX: function () {\n    this.x += this.speed\n  },\n  incSpeedY: function () {\n    this.y += this.speed\n  },\n  moveX: function () {\n    this.body = this.body.map(x => [x[0] + 20, x[1]])\n  }\n}\nwindow.onload = function () { initCanvas(); initArrowControls() }\n\nfunction isPhone () {\n  const flag = document.querySelector('#isPhone')\n  const computedStyle = window.getComputedStyle(flag, null)\n  const color = computedStyle.getPropertyValue('color')\n  return Number(color.toString().slice(4, 7)) === 255\n}\n\nfunction initArrowControls () {\n  let myEvent = isPhone() ? 'touchstart' : 'click'\n  const ctrl = document.querySelector('#controls')\n  let arrows = ctrl.children\n  for (let i = 0; i < arrows.length; i++) {\n    arrows[i].addEventListener(myEvent, (x) => console.log(x.target.id))\n  }\n  return 0\n}\n\nfunction initCanvas () {\n  ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight)\n  // console.log(canvas.clientWidth)\n  ctx.fillStyle = 'black'\n  // ctx.rotate(Math.PI / 180 * 10)\n  ctx.fillRect(500, 500, 100, 100)\n  ctx.stroke()\n  // console.log(new Date())\n  // window.requestAnimationFrame(draw)\n  window.setInterval(draw, 300) // Main Loop!\n}\n\nfunction draw () {\n  // window.requestAnimationFrame(draw)\n  // ;({ x, y, width } = snake) // eslint-disable-line\n  const leftest = snake.body[0]\n  ctx.clearRect(leftest[0], leftest[1], snake.width, snake.width)\n  snake.moveX()\n  // snake.incSpeedX()\n  // snake.x += snake.speed\n  // snake.y += 0\n  // ;(() => snake.x === 600 ? console.log(new Date()) : null)()\n  snake.body.forEach(xy => {\n    ctx.fillStyle = 'black'\n    ctx.fillRect(xy[0], xy[1], snake.width, snake.width)\n    ctx.fillStyle = 'yellow'\n    ctx.fillRect(xy[0] + 2.5, xy[1] + 2.5, 15, 15)\n  })\n  // snake.body = snake.body.slice(1).concat(xs[0])\n  // ctx.fillRect(snake.x, snake.y, width, width)\n}\n"]}