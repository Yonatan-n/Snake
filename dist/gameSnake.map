{"version":3,"sources":["gameSnake.js"],"names":["canvas","document","getElementById","ctx","getContext","colorList","snake","grid","width","dir","speed","border","length","tail","x","y","color","food","hd","move","change","spd","console","error","Error","nextHd","shift","push","pop","nextChange","log","window","onload","initCanvas","initArrowControls","funkTitle","i","genRandFood","changeSnakeColor","isPhone","flag","querySelector","computedStyle","getComputedStyle","getPropertyValue","Number","toString","slice","myEvent","ctrl","arrows","children","falseMove","addEventListener","target","id","dirKeys","key","undefined","switchThisColor","me","xs","style","randChoice","setInterval","srcElement","clearRect","height","fillStyle","fillRect","stroke","draw","randRange","l","h","Math","floor","random","xy","drawAllWithBorder","beginPath","arc","PI","fill","closePath","unshift","innerText","forEach","block","eqJson","deathSequence","br","wd","a","b","JSON","stringify","death","victorySequence"],"mappings":"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","file":"gameSnake.map","sourceRoot":"..","sourcesContent":["var canvas = document.getElementById('snakeCanvas')\nvar ctx = canvas.getContext('2d')\nconst colorList = [\n  'green',\n  'blue',\n  'burlywood',\n  'violet',\n  'pink',\n  'crimson',\n  'cadetblue',\n  'rosybrown',\n  'royalblue',\n  'red',\n  'rebeccapurple',\n  'yellowgreen',\n  'yellow',\n  'palevioletred',\n  'palegreen',\n  'salmon',\n  'aqua'\n]\nvar snake = {\n  grid: [],\n  width: 20,\n  dir: 'right',\n  speed: 20,\n  border: 2,\n  length: 5,\n  tail: [\n    { x: 0, y: 200 },\n    { x: 20, y: 200 },\n    { x: 40, y: 200 },\n    { x: 60, y: 200 },\n    { x: 80, y: 200 }\n  ],\n  color: 'green',\n  food: { x: 580, y: 580 },\n  hd: function () {\n    return this.tail[this.length - 1]\n  },\n  move: function () {\n    let change = []\n    const spd = this.speed\n    switch (this.dir) {\n      case 'right':\n        change = [spd, 0]\n        break\n      case 'left':\n        change = [-spd, 0]\n        break\n      case 'up':\n        change = [0, -spd]\n        break\n      case 'down':\n        change = [0, spd]\n        break\n      default:\n        console.error('error with snake dir', new Error())\n        break\n    }\n    // const nextHd = snake.hd()\n    let nextHd = snake.tail[snake.length - 1]\n    snake.tail.shift()\n    snake.tail.push({\n      x: nextHd.x + change[0],\n      y: nextHd.y + change[1]\n    })\n    nextHd = snake.tail[snake.length - 1]\n    if (nextHd.x > 560 || nextHd.x < 0 || nextHd.y > 560 || nextHd.y < 0) {\n      snake.tail.pop()\n      let nextChange = [nextHd.x, nextHd.y]\n      console.log(nextHd)\n      if (nextHd.x > 580) {\n        nextChange[0] = 0\n      } else if (nextHd.x < 0) {\n        nextChange[0] = 600\n      } else if (nextHd.y > 580) {\n        nextChange[1] = 0\n      } else if (nextHd.y < 0) {\n        nextChange[1] = 600\n      }\n      snake.tail.push({\n        x: nextChange[0],\n        y: nextChange[1]\n      })\n    }\n    console.log(change)\n    // const nextHd = snake.tail[snake.length - 1]\n\n    /* if (nextHd.x > 580) {\n      snake.tail.pop()\n      snake.tail.push({\n        x: 0,\n        y: nextHd.y\n      })\n    } */\n  }\n}\nwindow.onload = function () {\n  initCanvas()\n  initArrowControls()\n  funkTitle()\n  for (let i = 0; i <= 580; i += 20) { // [0, 20 .. 580]\n    snake.grid.push(i)\n  }\n  genRandFood()\n  changeSnakeColor()\n}\n\nfunction isPhone () {\n  const flag = document.querySelector('#isPhone')\n  const computedStyle = window.getComputedStyle(flag, null)\n  const color = computedStyle.getPropertyValue('color')\n  return Number(color.toString().slice(4, 7)) === 255\n}\n\nfunction initArrowControls () {\n  let myEvent = isPhone() ? 'touchstart' : 'click'\n  const ctrl = document.querySelector('#controls')\n  let arrows = ctrl.children\n  const falseMove = {\n    'up': 'down',\n    'down': 'up',\n    'left': 'right',\n    'right': 'left'\n  }\n  for (let i = 0; i < arrows.length; i++) {\n    arrows[i].addEventListener(myEvent, function (x) {\n      if (falseMove[x.target.id] !== snake.dir) {\n        snake.dir = x.target.id\n      }\n    })\n  } // need to add falseMove to this function too, cause you can make a u turn with out the u\n  document.addEventListener('keydown', function (x) {\n    const dirKeys = {\n      'w': 'up',\n      'a': 'left',\n      's': 'down',\n      'd': 'right'\n    }\n    if (dirKeys[x.key] !== undefined && falseMove[dirKeys[x.key]] !== snake.dir) {\n      snake.dir = dirKeys[x.key]\n    } else {\n      console.log('na')\n    }\n  })\n  return 0\n}\n\nfunction switchThisColor (me, xs = colorList) {\n  me.style.color = randChoice(xs)\n  return 0\n}\nfunction funkTitle () {\n  document.querySelector('#h-one').addEventListener('click', function (x) {\n    window.setInterval(function () { switchThisColor(x.srcElement) }, 1000 / 3)\n    return 0\n  })\n  // switchThisColor(, undefined)\n  return 0\n}\n\nfunction initCanvas () {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  // console.log(canvas.clientWidth)\n  ctx.fillStyle = 'black'\n  // ctx.rotate(Math.PI / 180 * 10)\n  ctx.fillRect(500, 500, 100, 100)\n  ctx.stroke()\n  // console.log(new Date())\n  // window.requestAnimationFrame(draw)\n  window.setInterval(draw, 1000 / 10) // Main Loop!\n}\n\nfunction randRange (l, h) {\n  return Math.floor(Math.random() * (h - l))\n}\nfunction randChoice (xs) {\n  return xs[randRange(0, xs.length)]\n}\n\nfunction draw () {\n  ctx.fillStyle = 'black'\n  ctx.clearRect(0, 0, canvas.width, canvas.height) // clear prev paint\n  for (let i = 0; i < snake.length; i++) { // paint all the new (and old) snake points\n    const xy = snake.tail[i]\n    drawAllWithBorder([xy.x, xy.y])\n  }\n  snake.move() // move to the next block\n  ctx.beginPath()\n  ctx.fillStyle = 'red'\n  ctx.arc(snake.food.x + 10, snake.food.y + 10, snake.width / 2, 0, Math.PI * 2)\n  ctx.fill()\n  ctx.closePath() // draw the food\n  if (snake.food.x === snake.hd().x && snake.food.y === snake.hd().y) {\n    snake.tail.unshift(snake.tail[0])\n    snake.length += 1\n    genRandFood()\n    changeSnakeColor()\n    document.querySelector('#score').innerText = snake.length - 5\n  } // check if food is eaten, inc snake if does and draw new food\n  snake.tail.slice(0, snake.length - 1).forEach(block => {\n    if (eqJson(block, snake.hd())) {\n      deathSequence()\n    }\n  })\n}\n\nfunction drawAllWithBorder (xy) {\n  const br = snake.border\n  const wd = snake.width\n  ctx.fillStyle = 'black'\n  ctx.fillRect(xy[0], xy[1], wd, wd)\n  ctx.fillStyle = snake.color\n  ctx.fillRect(xy[0] + (br / 2), xy[1] + (br / 2), wd - br, wd - br)\n}\n\nfunction genRandFood () {\n  snake.food = {\n    x: randChoice(snake.grid),\n    y: randChoice(snake.grid)\n  }\n}\nfunction changeSnakeColor () {\n  snake.color = randChoice(colorList)\n  return 0\n}\nfunction eqJson (a, b) {\n  return JSON.stringify(a) === JSON.stringify(b)\n}\nfunction deathSequence () {\n  const death = document.querySelector('#death').innerText\n  document.querySelector('#death').innerText = Number(death) + 1\n  snake.color = 'white'\n  // alert('dead! refresh 4 now')\n}\nfunction victorySequence () {\n  console.log('you won!')\n}\n"]}