{"version":3,"sources":["gameSnake.js"],"names":["canvas","document","getElementById","ctx","getContext","colorList","snake","body","food","x","y","width","dir","speed","border","incSpeedX","incSpeedY","move","change","spd","console","error","Error","map","window","onload","initCanvas","initArrowControls","funkTitle","isPhone","flag","querySelector","computedStyle","getComputedStyle","color","getPropertyValue","Number","toString","slice","myEvent","ctrl","arrows","children","i","length","addEventListener","target","id","dirKeys","key","undefined","log","switchThisColor","me","xs","style","randChoice","setInterval","srcElement","clearRect","clientWidth","clientHeight","fillStyle","fillRect","stroke","draw","randRange","l","h","Math","floor","random","leftest","forEach","xy","drawAllWithBorder","br","wd"],"mappings":"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","file":"gameSnake.map","sourceRoot":"..","sourcesContent":["var canvas = document.getElementById('snakeCanvas')\nvar ctx = canvas.getContext('2d')\nconst colorList = [\n  'whitesmoke',\n  'green',\n  'blue',\n  'burlywood',\n  'violet',\n  'pink',\n  'crimson',\n  'cadetblue',\n  'rosybrown',\n  'royalblue',\n  'red',\n  'rebeccapurple',\n  'yellowgreen',\n  'yellow',\n  'palevioletred',\n  'palegreen',\n  'salmon',\n  'aqua'\n]\nvar snake = {\n  body: [[0, 0], [20, 0], [40, 0], [60, 0]],\n  food: [[100, 100], [120, 120]],\n  x: 0,\n  y: 0,\n  width: 20,\n  dir: 'right',\n  speed: 20,\n  border: 2,\n  incSpeedX: function () {\n    this.x += this.speed\n  },\n  incSpeedY: function () {\n    this.y += this.speed\n  },\n  move: function () {\n    let change\n    const spd = this.speed\n    switch (this.dir) {\n      case 'right':\n        change = [spd, 0]\n        break\n      case 'left':\n        change = [-spd, 0]\n        break\n      case 'up':\n        change = [0, -spd]\n        break\n      case 'down':\n        change = [0, spd]\n        break\n      default:\n        console.error('error with snake dir', new Error())\n        break\n    }\n    this.body = this.body.map(x => [x[0] + change[0], x[1] + change[1]])\n  }\n}\nwindow.onload = function () { initCanvas(); initArrowControls(); funkTitle() }\n\nfunction isPhone () {\n  const flag = document.querySelector('#isPhone')\n  const computedStyle = window.getComputedStyle(flag, null)\n  const color = computedStyle.getPropertyValue('color')\n  return Number(color.toString().slice(4, 7)) === 255\n}\n\nfunction initArrowControls () {\n  let myEvent = isPhone() ? 'touchstart' : 'click'\n  const ctrl = document.querySelector('#controls')\n  let arrows = ctrl.children\n  for (let i = 0; i < arrows.length; i++) {\n    arrows[i].addEventListener(myEvent, function (x) { snake.dir = (x.target.id) })\n  }\n  document.addEventListener('keydown', function (x) {\n    const dirKeys = {\n      'w': 'up',\n      'a': 'left',\n      's': 'down',\n      'd': 'right'\n    }\n    if (dirKeys[x.key] !== undefined) {\n      snake.dir = dirKeys[x.key]\n    } else {\n      console.log('na')\n    }\n  })\n  return 0\n}\n\nfunction switchThisColor (me, xs = colorList) {\n  me.style.color = randChoice(xs)\n  return 0\n}\nfunction funkTitle () {\n  document.querySelector('#h-one').addEventListener('click', function (x) {\n    window.setInterval(function () { switchThisColor(x.srcElement) }, 1000)\n    return 0\n  })\n  // switchThisColor(, undefined)\n  return 0\n}\n\nfunction initCanvas () {\n  ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight)\n  // console.log(canvas.clientWidth)\n  ctx.fillStyle = 'black'\n  // ctx.rotate(Math.PI / 180 * 10)\n  ctx.fillRect(500, 500, 100, 100)\n  ctx.stroke()\n  // console.log(new Date())\n  // window.requestAnimationFrame(draw)\n  window.setInterval(draw, 300) // Main Loop!\n}\n\nfunction randRange (l, h) {\n  return Math.floor(Math.random() * (h - l))\n}\nfunction randChoice (xs) {\n  return xs[randRange(0, xs.length)]\n}\n\nfunction draw () {\n  // window.requestAnimationFrame(draw)\n  // ;({ x, y, width } = snake) // eslint-disable-line\n  const leftest = snake.body[0]\n  ctx.clearRect(leftest[0], leftest[1], snake.width, snake.width)\n  snake.move()\n  // snake.incSpeedX()\n  // snake.x += snake.speed\n  // snake.y += 0\n  // ;(() => snake.x === 600 ? console.log(new Date()) : null)()\n  snake.body.forEach(xy => {\n    drawAllWithBorder(xy)\n  })\n  // snake.body = snake.body.slice(1).concat(xs[0])\n  // ctx.fillRect(snake.x, snake.y, width, width)\n}\n\nfunction drawAllWithBorder (xy) {\n  const br = snake.border\n  const wd = snake.width\n  ctx.fillStyle = 'black'\n  ctx.fillRect(xy[0], xy[1], wd, wd)\n  ctx.fillStyle = 'yellow'\n  ctx.fillRect(xy[0] + (br / 2), xy[1] + (br / 2), wd - br, wd - br)\n}\n"]}